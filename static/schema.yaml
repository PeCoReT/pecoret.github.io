openapi: 3.0.3
info:
  title: PeCoReT API
  version: 0.0.1
  description: PeCoReT API documentation
paths:
  /api/advisories/:
    get:
      operationId: advisories_list
      description: |-
        Handles ``Advisory`` model.
        Here you can download markdown and pdf exports too.
      parameters:
      - in: query
        name: is_draft
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: integer
          enum:
          - Fixed
          - Open
          - Wont Fix
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdvisoryList'
          description: ''
    post:
      operationId: advisories_create
      description: |-
        Handles ``Advisory`` model.
        Here you can download markdown and pdf exports too.
      tags:
      - advisories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvisoryCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdvisoryCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdvisoryCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryCreate'
          description: ''
  /api/advisories/{advisory}/attachments/:
    get:
      operationId: advisories_attachments_list
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedImageAttachmentList'
          description: ''
    post:
      operationId: advisories_attachments_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      tags:
      - advisories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageAttachment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageAttachment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageAttachment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageAttachment'
          description: ''
  /api/advisories/{advisory}/attachments/{id}/:
    get:
      operationId: advisories_attachments_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image attachment.
        required: true
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageAttachment'
          description: ''
    put:
      operationId: advisories_attachments_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image attachment.
        required: true
      tags:
      - advisories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageAttachment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageAttachment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageAttachment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageAttachment'
          description: ''
    patch:
      operationId: advisories_attachments_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image attachment.
        required: true
      tags:
      - advisories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedImageAttachment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedImageAttachment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedImageAttachment'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageAttachment'
          description: ''
    delete:
      operationId: advisories_attachments_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image attachment.
        required: true
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/advisories/{advisory}/attachments/{id}/preview/:
    get:
      operationId: advisories_attachments_preview_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this image attachment.
        required: true
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageAttachment'
          description: ''
  /api/advisories/{advisory}/comments/:
    get:
      operationId: advisories_comments_list
      description: manage advisory comments
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdvisoryCommentList'
          description: ''
    post:
      operationId: advisories_comments_create
      description: manage advisory comments
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      tags:
      - advisories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvisoryComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdvisoryComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdvisoryComment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryComment'
          description: ''
  /api/advisories/{advisory}/comments/{id}/:
    get:
      operationId: advisories_comments_retrieve
      description: manage advisory comments
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this advisory comment.
        required: true
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryComment'
          description: ''
    put:
      operationId: advisories_comments_update
      description: manage advisory comments
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this advisory comment.
        required: true
      tags:
      - advisories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvisoryComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdvisoryComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdvisoryComment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryComment'
          description: ''
    patch:
      operationId: advisories_comments_partial_update
      description: manage advisory comments
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this advisory comment.
        required: true
      tags:
      - advisories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdvisoryComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdvisoryComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdvisoryComment'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryComment'
          description: ''
  /api/advisories/{advisory}/memberships/:
    get:
      operationId: advisories_memberships_list
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdvisoryMembershipList'
          description: ''
    post:
      operationId: advisories_memberships_create
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      tags:
      - advisories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvisoryMembershipCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdvisoryMembershipCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdvisoryMembershipCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryMembershipCreate'
          description: ''
  /api/advisories/{advisory}/memberships/{id}/:
    get:
      operationId: advisories_memberships_retrieve
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this advisory membership.
        required: true
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryMembership'
          description: ''
    delete:
      operationId: advisories_memberships_destroy
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this advisory membership.
        required: true
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/advisories/{advisory}/timelines/:
    get:
      operationId: advisories_timelines_list
      description: |-
        ViewSet of the AdvisoryTimeline.
        CRUD Methods.

        Returns:
            _type_: _description_
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdvisoryTimelineList'
          description: ''
    post:
      operationId: advisories_timelines_create
      description: |-
        ViewSet of the AdvisoryTimeline.
        CRUD Methods.

        Returns:
            _type_: _description_
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      tags:
      - advisories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvisoryTimeline'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdvisoryTimeline'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdvisoryTimeline'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryTimeline'
          description: ''
  /api/advisories/{advisory}/timelines/{id}/:
    get:
      operationId: advisories_timelines_retrieve
      description: |-
        ViewSet of the AdvisoryTimeline.
        CRUD Methods.

        Returns:
            _type_: _description_
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this advisory timeline.
        required: true
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryTimeline'
          description: ''
    put:
      operationId: advisories_timelines_update
      description: |-
        ViewSet of the AdvisoryTimeline.
        CRUD Methods.

        Returns:
            _type_: _description_
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this advisory timeline.
        required: true
      tags:
      - advisories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvisoryTimeline'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdvisoryTimeline'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdvisoryTimeline'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryTimeline'
          description: ''
    patch:
      operationId: advisories_timelines_partial_update
      description: |-
        ViewSet of the AdvisoryTimeline.
        CRUD Methods.

        Returns:
            _type_: _description_
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this advisory timeline.
        required: true
      tags:
      - advisories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdvisoryTimeline'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdvisoryTimeline'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdvisoryTimeline'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryTimeline'
          description: ''
    delete:
      operationId: advisories_timelines_destroy
      description: |-
        ViewSet of the AdvisoryTimeline.
        CRUD Methods.

        Returns:
            _type_: _description_
      parameters:
      - in: path
        name: advisory
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this advisory timeline.
        required: true
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/advisories/{advisory_id}/:
    get:
      operationId: advisories_retrieve
      description: |-
        Handles ``Advisory`` model.
        Here you can download markdown and pdf exports too.
      parameters:
      - in: path
        name: advisory_id
        schema:
          type: string
        description: A unique value identifying this advisory.
        required: true
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advisory'
          description: ''
    put:
      operationId: advisories_update
      description: |-
        Handles ``Advisory`` model.
        Here you can download markdown and pdf exports too.
      parameters:
      - in: path
        name: advisory_id
        schema:
          type: string
        description: A unique value identifying this advisory.
        required: true
      tags:
      - advisories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvisoryUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdvisoryUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdvisoryUpdate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryUpdate'
          description: ''
    patch:
      operationId: advisories_partial_update
      description: |-
        Handles ``Advisory`` model.
        Here you can download markdown and pdf exports too.
      parameters:
      - in: path
        name: advisory_id
        schema:
          type: string
        description: A unique value identifying this advisory.
        required: true
      tags:
      - advisories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdvisoryUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdvisoryUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdvisoryUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryUpdate'
          description: ''
    delete:
      operationId: advisories_destroy
      description: |-
        Handles ``Advisory`` model.
        Here you can download markdown and pdf exports too.
      parameters:
      - in: path
        name: advisory_id
        schema:
          type: string
        description: A unique value identifying this advisory.
        required: true
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/advisories/{advisory_id}/export_markdown/:
    get:
      operationId: advisories_export_markdown_retrieve
      description: |-
        export advisory details as Markdown attachment

        Returns:
            HttpResponse: Response with file attachment
      parameters:
      - in: path
        name: advisory_id
        schema:
          type: string
        description: A unique value identifying this advisory.
        required: true
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryUpdate'
          description: ''
  /api/advisories/{advisory_id}/export_pdf/:
    get:
      operationId: advisories_export_pdf_retrieve
      description: |-
        export the advisory details as PDF attachment

        Returns:
            HttpResponse: PDF Response
      parameters:
      - in: path
        name: advisory_id
        schema:
          type: string
        description: A unique value identifying this advisory.
        required: true
      tags:
      - advisories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryUpdate'
          description: ''
  /api/advisory-management/inbox/:
    get:
      operationId: advisory_management_inbox_list
      parameters:
      - in: query
        name: is_draft
        schema:
          type: boolean
      - in: query
        name: labels
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: integer
          enum:
          - Fixed
          - Open
          - Wont Fix
      tags:
      - advisory-management
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdvisoryAdvisoryManagementList'
          description: ''
  /api/advisory-management/inbox/inbox_statistics/:
    get:
      operationId: advisory_management_inbox_inbox_statistics_retrieve
      tags:
      - advisory-management
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryAdvisoryManagement'
          description: ''
  /api/advisory-management/inbox/top_products/:
    get:
      operationId: advisory_management_inbox_top_products_retrieve
      tags:
      - advisory-management
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryAdvisoryManagement'
          description: ''
  /api/advisory-management/inbox/top_submitters/:
    get:
      operationId: advisory_management_inbox_top_submitters_retrieve
      tags:
      - advisory-management
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryAdvisoryManagement'
          description: ''
  /api/advisory-management/inbox/top_vendors/:
    get:
      operationId: advisory_management_inbox_top_vendors_retrieve
      tags:
      - advisory-management
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryAdvisoryManagement'
          description: ''
  /api/advisory-management/inbox/top_vulnerabilities/:
    get:
      operationId: advisory_management_inbox_top_vulnerabilities_retrieve
      tags:
      - advisory-management
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisoryAdvisoryManagement'
          description: ''
  /api/advisory-management/labels/:
    get:
      operationId: advisory_management_labels_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - advisory-management
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLabelList'
          description: ''
    post:
      operationId: advisory_management_labels_create
      tags:
      - advisory-management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Label'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
  /api/advisory-management/labels/{id}/:
    get:
      operationId: advisory_management_labels_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this label.
        required: true
      tags:
      - advisory-management
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
    put:
      operationId: advisory_management_labels_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this label.
        required: true
      tags:
      - advisory-management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Label'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
    patch:
      operationId: advisory_management_labels_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this label.
        required: true
      tags:
      - advisory-management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLabel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLabel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLabel'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
    delete:
      operationId: advisory_management_labels_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this label.
        required: true
      tags:
      - advisory-management
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/api-tokens/:
    get:
      operationId: api_tokens_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api-tokens
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAPITokenList'
          description: ''
    post:
      operationId: api_tokens_create
      tags:
      - api-tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/APIToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/APIToken'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIToken'
          description: ''
  /api/api-tokens/{prefix}/:
    get:
      operationId: api_tokens_retrieve
      parameters:
      - in: path
        name: prefix
        schema:
          type: string
        description: A unique value identifying this api token.
        required: true
      tags:
      - api-tokens
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIToken'
          description: ''
    delete:
      operationId: api_tokens_destroy
      parameters:
      - in: path
        name: prefix
        schema:
          type: string
        description: A unique value identifying this api token.
        required: true
      tags:
      - api-tokens
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/check/:
    get:
      operationId: auth_check_retrieve
      description: |-
        Check if the user is logged in.
        This view provides a way for the frontend to get the CSRF_COOKIE.

        original code linked below. just add our user information here for the top bar.
        https://medium.com/swlh/django-rest-framework-and-spa-session-authentication-with-docker-and-nginx-aa64871f29cd
      tags:
      - auth
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: ''
  /api/auth/login/:
    post:
      operationId: auth_login_create
      description: |-
        handle the login process.
        use a method similar to the original django auth views but using JSON.

        Args:
            request (_type_): _description_

        Returns:
            _type_: _description_
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
          description: ''
  /api/auth/logout/:
    post:
      operationId: auth_logout_create
      description: |-
        Handle post request and perform logout.
        Use POST to prevent CSRF.

        Args:
            request (_type_): _description_

        Returns:
            _type_: _description_
      tags:
      - auth
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/checks/checklists/:
    get:
      operationId: checks_checklists_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - checks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChecklistList'
          description: ''
  /api/checks/checklists/{id}/:
    get:
      operationId: checks_checklists_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this checklist.
        required: true
      tags:
      - checks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checklist'
          description: ''
  /api/companies/:
    get:
      operationId: companies_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - companies
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyList'
          description: ''
    post:
      operationId: companies_create
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /api/companies/{company}/contacts/:
    get:
      operationId: companies_contacts_list
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: company
        schema:
          type: integer
        required: true
      - in: query
        name: company
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - companies
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyContactList'
          description: ''
    post:
      operationId: companies_contacts_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: company
        schema:
          type: integer
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyContact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyContact'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyContact'
          description: ''
  /api/companies/{company}/contacts/{id}/:
    get:
      operationId: companies_contacts_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: company
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company contact.
        required: true
      tags:
      - companies
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyContact'
          description: ''
    put:
      operationId: companies_contacts_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: company
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company contact.
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyContact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyContact'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyContact'
          description: ''
    patch:
      operationId: companies_contacts_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: company
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company contact.
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompanyContact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompanyContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompanyContact'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyContact'
          description: ''
    delete:
      operationId: companies_contacts_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: company
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company contact.
        required: true
      tags:
      - companies
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/companies/{company}/information/:
    get:
      operationId: companies_information_list
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: company
        schema:
          type: integer
        required: true
      - in: query
        name: company
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - companies
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompanyInformationList'
          description: ''
    post:
      operationId: companies_information_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: company
        schema:
          type: integer
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyInformation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyInformation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyInformation'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInformation'
          description: ''
  /api/companies/{company}/information/{id}/:
    get:
      operationId: companies_information_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: company
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company information.
        required: true
      tags:
      - companies
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInformation'
          description: ''
    put:
      operationId: companies_information_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: company
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company information.
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyInformation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyInformation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyInformation'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInformation'
          description: ''
    patch:
      operationId: companies_information_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: company
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company information.
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompanyInformation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompanyInformation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompanyInformation'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInformation'
          description: ''
    delete:
      operationId: companies_information_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: company
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company information.
        required: true
      tags:
      - companies
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/companies/{id}/:
    get:
      operationId: companies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - companies
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    put:
      operationId: companies_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    patch:
      operationId: companies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this company.
        required: true
      tags:
      - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompany'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /api/cwes/:
    get:
      operationId: cwes_list
      parameters:
      - in: query
        name: cwe_id
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - cwes
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCWEList'
          description: ''
  /api/cwes/{id}/:
    get:
      operationId: cwes_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this CWE.
        required: true
      tags:
      - cwes
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CWE'
          description: ''
  /api/groups/:
    get:
      operationId: groups_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - groups
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupList'
          description: ''
  /api/groups/{id}/:
    get:
      operationId: groups_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this group.
        required: true
      tags:
      - groups
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: ''
  /api/pentest-types/:
    get:
      operationId: pentest_types_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - pentest-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPentestTypeList'
          description: ''
    post:
      operationId: pentest_types_create
      description: Mixin that adds basic filtering backends
      tags:
      - pentest-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PentestType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PentestType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PentestType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PentestType'
          description: ''
  /api/pentest-types/{id}/:
    get:
      operationId: pentest_types_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pentest type.
        required: true
      tags:
      - pentest-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PentestType'
          description: ''
    put:
      operationId: pentest_types_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pentest type.
        required: true
      tags:
      - pentest-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PentestType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PentestType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PentestType'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PentestType'
          description: ''
    patch:
      operationId: pentest_types_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pentest type.
        required: true
      tags:
      - pentest-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPentestType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPentestType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPentestType'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PentestType'
          description: ''
    delete:
      operationId: pentest_types_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this pentest type.
        required: true
      tags:
      - pentest-types
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/:
    get:
      operationId: projects_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: pinned
        schema:
          type: boolean
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: integer
          enum:
          - Closed
          - Open
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectList'
          description: ''
    post:
      operationId: projects_create
      description: Mixin that adds basic filtering backends
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/projects/{id}/:
    get:
      operationId: projects_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: projects_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: projects_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProject'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: projects_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{id}/pin_project/:
    post:
      operationId: projects_pin_project_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinnedProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PinnedProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PinnedProject'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinnedProject'
          description: ''
    delete:
      operationId: projects_pin_project_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{id}/stats_finding_dashboard/:
    get:
      operationId: projects_stats_finding_dashboard_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/projects/{project}/accounts/:
    get:
      operationId: projects_accounts_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccountList'
          description: ''
    post:
      operationId: projects_accounts_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
  /api/projects/{project}/accounts/{id}/:
    get:
      operationId: projects_accounts_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this account.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    put:
      operationId: projects_accounts_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this account.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Account'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    patch:
      operationId: projects_accounts_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this account.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccount'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: ''
    delete:
      operationId: projects_accounts_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this account.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project}/checklist-categories/:
    get:
      operationId: projects_checklist_categories_list
      parameters:
      - in: query
        name: checklist
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetCategoryList'
          description: ''
  /api/projects/{project}/checklist-categories/{id}/:
    get:
      operationId: projects_checklist_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this asset category.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetCategory'
          description: ''
  /api/projects/{project}/checklist-items/:
    get:
      operationId: projects_checklist_items_list
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetItemList'
          description: ''
    post:
      operationId: projects_checklist_items_create
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssetItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssetItem'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetItem'
          description: ''
  /api/projects/{project}/checklist-items/{id}/:
    get:
      operationId: projects_checklist_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this asset item.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetItem'
          description: ''
    put:
      operationId: projects_checklist_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this asset item.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssetItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssetItem'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetItem'
          description: ''
    patch:
      operationId: projects_checklist_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this asset item.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssetItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssetItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssetItem'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetItem'
          description: ''
  /api/projects/{project}/checklists/:
    get:
      operationId: projects_checklists_list
      parameters:
      - in: query
        name: checklist_id
        schema:
          type: string
      - in: query
        name: host
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: mobile_application
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: service
        schema:
          type: integer
      - in: query
        name: web_application
        schema:
          type: integer
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAssetChecklistList'
          description: ''
    post:
      operationId: projects_checklists_create
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetChecklistCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssetChecklistCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssetChecklistCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetChecklistCreate'
          description: ''
  /api/projects/{project}/checklists/{id}/:
    get:
      operationId: projects_checklists_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this asset checklist.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetChecklist'
          description: ''
    delete:
      operationId: projects_checklists_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this asset checklist.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project}/commands/:
    get:
      operationId: projects_commands_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectCommandList'
          description: ''
    post:
      operationId: projects_commands_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCommand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCommand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCommand'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCommand'
          description: ''
  /api/projects/{project}/commands/{id}/:
    get:
      operationId: projects_commands_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project command.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCommand'
          description: ''
    put:
      operationId: projects_commands_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project command.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCommand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCommand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCommand'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCommand'
          description: ''
    patch:
      operationId: projects_commands_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project command.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectCommand'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectCommand'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectCommand'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCommand'
          description: ''
    delete:
      operationId: projects_commands_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project command.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project}/contacts/:
    get:
      operationId: projects_contacts_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectContactList'
          description: ''
    post:
      operationId: projects_contacts_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectContact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectContact'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectContact'
          description: ''
  /api/projects/{project}/contacts/{id}/:
    get:
      operationId: projects_contacts_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project contact.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectContact'
          description: ''
    put:
      operationId: projects_contacts_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project contact.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectContact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectContact'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectContact'
          description: ''
    patch:
      operationId: projects_contacts_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project contact.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectContact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectContact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectContact'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectContact'
          description: ''
    delete:
      operationId: projects_contacts_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project contact.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project}/files/:
    get:
      operationId: projects_files_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectFileList'
          description: ''
    post:
      operationId: projects_files_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectFile'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFile'
          description: ''
  /api/projects/{project}/files/{id}/:
    get:
      operationId: projects_files_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project file.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFile'
          description: ''
    put:
      operationId: projects_files_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project file.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectFile'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFile'
          description: ''
    patch:
      operationId: projects_files_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project file.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectFile'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFile'
          description: ''
    delete:
      operationId: projects_files_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project file.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project}/files/{id}/download/:
    get:
      operationId: projects_files_download_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project file.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectFile'
          description: ''
  /api/projects/{project}/findings/:
    get:
      operationId: projects_findings_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: needs_review
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: severity
        schema:
          type: integer
          enum:
          - Critical
          - High
          - Informational
          - Low
          - Medium
      - in: query
        name: status
        schema:
          type: integer
          enum:
          - Fixed
          - Open
          - Wont Fix
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFindingList'
          description: ''
    post:
      operationId: projects_findings_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FindingCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FindingCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingCreate'
          description: ''
  /api/projects/{project}/findings/{finding}/attachments/:
    get:
      operationId: projects_findings_attachments_list
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFindingImageAttachmentList'
          description: ''
    post:
      operationId: projects_findings_attachments_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingImageAttachment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FindingImageAttachment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FindingImageAttachment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingImageAttachment'
          description: ''
  /api/projects/{project}/findings/{finding}/attachments/{id}/:
    get:
      operationId: projects_findings_attachments_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this finding image attachment.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingImageAttachment'
          description: ''
    put:
      operationId: projects_findings_attachments_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this finding image attachment.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingImageAttachment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FindingImageAttachment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FindingImageAttachment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingImageAttachment'
          description: ''
    patch:
      operationId: projects_findings_attachments_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this finding image attachment.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFindingImageAttachment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFindingImageAttachment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFindingImageAttachment'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingImageAttachment'
          description: ''
    delete:
      operationId: projects_findings_attachments_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this finding image attachment.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project}/findings/{finding}/attachments/{id}/preview/:
    get:
      operationId: projects_findings_attachments_preview_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this finding image attachment.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingImageAttachment'
          description: ''
  /api/projects/{project}/findings/{finding}/comments/:
    get:
      operationId: projects_findings_comments_list
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFindingCommentList'
          description: ''
    post:
      operationId: projects_findings_comments_create
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FindingComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FindingComment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingComment'
          description: ''
  /api/projects/{project}/findings/{finding}/comments/{id}/:
    get:
      operationId: projects_findings_comments_retrieve
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this finding comment.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingComment'
          description: ''
    put:
      operationId: projects_findings_comments_update
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this finding comment.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FindingComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FindingComment'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingComment'
          description: ''
    patch:
      operationId: projects_findings_comments_partial_update
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this finding comment.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFindingComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFindingComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFindingComment'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingComment'
          description: ''
  /api/projects/{project}/findings/{finding}/cvss-scores/:
    get:
      operationId: projects_findings_cvss_scores_list
      description: |-
        CVSSBaseScore has a 1-1 relation with a finding.
        we do not require listing here. just return the single instance if exists.
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCVSSBaseScoreList'
          description: ''
  /api/projects/{project}/findings/{finding}/cvss-scores/{id}/:
    get:
      operationId: projects_findings_cvss_scores_retrieve
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cvss base score.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CVSSBaseScore'
          description: ''
    put:
      operationId: projects_findings_cvss_scores_update
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cvss base score.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CVSSBaseScore'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CVSSBaseScore'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CVSSBaseScore'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CVSSBaseScore'
          description: ''
    patch:
      operationId: projects_findings_cvss_scores_partial_update
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cvss base score.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCVSSBaseScore'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCVSSBaseScore'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCVSSBaseScore'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CVSSBaseScore'
          description: ''
  /api/projects/{project}/findings/{finding}/owasp-risk-ratings/:
    get:
      operationId: projects_findings_owasp_risk_ratings_list
      description: |-
        has a 1-1 relation with finding.
        no listing here, return single instance
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOWASPRiskRatingList'
          description: ''
  /api/projects/{project}/findings/{finding}/owasp-risk-ratings/{id}/:
    get:
      operationId: projects_findings_owasp_risk_ratings_retrieve
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this owasp risk rating.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OWASPRiskRating'
          description: ''
    put:
      operationId: projects_findings_owasp_risk_ratings_update
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this owasp risk rating.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OWASPRiskRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OWASPRiskRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OWASPRiskRating'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OWASPRiskRating'
          description: ''
    patch:
      operationId: projects_findings_owasp_risk_ratings_partial_update
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this owasp risk rating.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOWASPRiskRating'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOWASPRiskRating'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOWASPRiskRating'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OWASPRiskRating'
          description: ''
  /api/projects/{project}/findings/{finding}/timelines/:
    get:
      operationId: projects_findings_timelines_list
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFindingTimelineList'
          description: ''
  /api/projects/{project}/findings/{finding}/timelines/{id}/:
    get:
      operationId: projects_findings_timelines_retrieve
      parameters:
      - in: path
        name: finding
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this finding timeline.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingTimeline'
          description: ''
  /api/projects/{project}/findings/{id}/:
    get:
      operationId: projects_findings_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this finding.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
          description: ''
    put:
      operationId: projects_findings_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this finding.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Finding'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Finding'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Finding'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
          description: ''
    patch:
      operationId: projects_findings_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this finding.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFinding'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFinding'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFinding'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
          description: ''
    delete:
      operationId: projects_findings_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this finding.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project}/findings/{id}/as_advisory/:
    post:
      operationId: projects_findings_as_advisory_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this finding.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Finding'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Finding'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Finding'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
          description: ''
  /api/projects/{project}/findings/{id}/copy/:
    post:
      operationId: projects_findings_copy_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this finding.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Finding'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Finding'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Finding'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
          description: ''
  /api/projects/{project}/findings/{id}/export_pdf/:
    get:
      operationId: projects_findings_export_pdf_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this finding.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Finding'
          description: ''
  /api/projects/{project}/hosts/:
    get:
      operationId: projects_hosts_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHostList'
          description: ''
    post:
      operationId: projects_hosts_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Host'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Host'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Host'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: ''
  /api/projects/{project}/hosts/{id}/:
    get:
      operationId: projects_hosts_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this host.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: ''
    put:
      operationId: projects_hosts_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this host.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Host'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Host'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Host'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: ''
    patch:
      operationId: projects_hosts_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this host.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHost'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: ''
    delete:
      operationId: projects_hosts_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this host.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project}/memberships/:
    get:
      operationId: projects_memberships_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMembershipList'
          description: ''
    post:
      operationId: projects_memberships_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MembershipCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MembershipCreateUpdate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipCreateUpdate'
          description: ''
  /api/projects/{project}/memberships/{id}/:
    get:
      operationId: projects_memberships_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this membership.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
          description: ''
    put:
      operationId: projects_memberships_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this membership.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MembershipCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MembershipCreateUpdate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipCreateUpdate'
          description: ''
    patch:
      operationId: projects_memberships_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this membership.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMembershipCreateUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMembershipCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMembershipCreateUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipCreateUpdate'
          description: ''
    delete:
      operationId: projects_memberships_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this membership.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project}/memberships/me/:
    get:
      operationId: projects_memberships_me_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipCreateUpdate'
          description: ''
  /api/projects/{project}/mobile-applications/:
    get:
      operationId: projects_mobile_applications_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMobileApplicationList'
          description: ''
    post:
      operationId: projects_mobile_applications_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobileApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MobileApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MobileApplication'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileApplication'
          description: ''
  /api/projects/{project}/mobile-applications/{id}/:
    get:
      operationId: projects_mobile_applications_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this mobile application.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileApplication'
          description: ''
    put:
      operationId: projects_mobile_applications_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this mobile application.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MobileApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MobileApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MobileApplication'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileApplication'
          description: ''
    patch:
      operationId: projects_mobile_applications_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this mobile application.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMobileApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMobileApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMobileApplication'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileApplication'
          description: ''
    delete:
      operationId: projects_mobile_applications_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this mobile application.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project}/reports/:
    get:
      operationId: projects_reports_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReportList'
          description: ''
    post:
      operationId: projects_reports_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Report'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
  /api/projects/{project}/reports/{id}/:
    get:
      operationId: projects_reports_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
    put:
      operationId: projects_reports_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Report'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Report'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
    patch:
      operationId: projects_reports_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReport'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
    delete:
      operationId: projects_reports_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project}/reports/{report}/change-histories/:
    get:
      operationId: projects_reports_change_histories_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - in: path
        name: report
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChangeHistoryList'
          description: ''
    post:
      operationId: projects_reports_change_histories_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - in: path
        name: report
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeHistory'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeHistory'
          description: ''
  /api/projects/{project}/reports/{report}/change-histories/{id}/:
    get:
      operationId: projects_reports_change_histories_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this change history.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - in: path
        name: report
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeHistory'
          description: ''
    put:
      operationId: projects_reports_change_histories_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this change history.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - in: path
        name: report
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeHistory'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeHistory'
          description: ''
    patch:
      operationId: projects_reports_change_histories_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this change history.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - in: path
        name: report
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChangeHistory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChangeHistory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChangeHistory'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeHistory'
          description: ''
    delete:
      operationId: projects_reports_change_histories_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this change history.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - in: path
        name: report
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project}/reports/{report}/report-releases/:
    get:
      operationId: projects_reports_report_releases_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - in: path
        name: report
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReportReleaseList'
          description: ''
    post:
      operationId: projects_reports_report_releases_create
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - in: path
        name: report
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRelease'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportRelease'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportRelease'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportRelease'
          description: ''
  /api/projects/{project}/reports/{report}/report-releases/{id}/:
    get:
      operationId: projects_reports_report_releases_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report release.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - in: path
        name: report
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportRelease'
          description: ''
    delete:
      operationId: projects_reports_report_releases_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report release.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - in: path
        name: report
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project}/reports/{report}/report-releases/{id}/download/:
    get:
      operationId: projects_reports_report_releases_download_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report release.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - in: path
        name: report
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportRelease'
          description: ''
  /api/projects/{project}/reports/{report}/report-releases/preview_document/:
    get:
      operationId: projects_reports_report_releases_preview_document_retrieve
      description: |-
        get the ReleaseType.PREVIEW document details
        :param args:
        :param kwargs:
        :return:
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - in: path
        name: report
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportRelease'
          description: ''
  /api/projects/{project}/scopes/:
    get:
      operationId: projects_scopes_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectScopeList'
          description: ''
    post:
      operationId: projects_scopes_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectScope'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectScope'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectScope'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectScope'
          description: ''
  /api/projects/{project}/scopes/{id}/:
    get:
      operationId: projects_scopes_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project scope.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectScope'
          description: ''
    put:
      operationId: projects_scopes_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project scope.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectScope'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectScope'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectScope'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectScope'
          description: ''
    patch:
      operationId: projects_scopes_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project scope.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectScope'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectScope'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectScope'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectScope'
          description: ''
    delete:
      operationId: projects_scopes_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project scope.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project}/services/:
    get:
      operationId: projects_services_list
      description: Mixin that adds basic filtering backends
      parameters:
      - in: query
        name: host
        schema:
          type: integer
      - in: query
        name: host_id
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: port
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - in: query
        name: protocol
        schema:
          type: integer
          enum:
          - TCP
          - UDP
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
          nullable: true
          enum:
          - Closed
          - Filtered
          - Open
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceList'
          description: ''
    post:
      operationId: projects_services_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Service'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Service'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
  /api/projects/{project}/services/{id}/:
    get:
      operationId: projects_services_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
    put:
      operationId: projects_services_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Service'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Service'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
    patch:
      operationId: projects_services_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedService'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedService'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedService'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
    delete:
      operationId: projects_services_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project}/vulnerabilities/:
    get:
      operationId: projects_vulnerabilities_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectVulnerabilityList'
          description: ''
    post:
      operationId: projects_vulnerabilities_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectVulnerability'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectVulnerability'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectVulnerability'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectVulnerability'
          description: ''
  /api/projects/{project}/vulnerabilities/{id}/:
    get:
      operationId: projects_vulnerabilities_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Vulnerability.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectVulnerability'
          description: ''
    put:
      operationId: projects_vulnerabilities_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Vulnerability.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectVulnerability'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectVulnerability'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectVulnerability'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectVulnerability'
          description: ''
    patch:
      operationId: projects_vulnerabilities_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Vulnerability.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectVulnerability'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectVulnerability'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectVulnerability'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectVulnerability'
          description: ''
    delete:
      operationId: projects_vulnerabilities_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Project Vulnerability.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/{project}/vulnerabilities/search/:
    get:
      operationId: projects_vulnerabilities_search_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectVulnerability'
          description: ''
  /api/projects/{project}/web-applications/:
    get:
      operationId: projects_web_applications_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: project
        schema:
          type: integer
        required: true
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWebApplicationList'
          description: ''
    post:
      operationId: projects_web_applications_create
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebApplication'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplication'
          description: ''
  /api/projects/{project}/web-applications/{id}/:
    get:
      operationId: projects_web_applications_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Web Application.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplication'
          description: ''
    put:
      operationId: projects_web_applications_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Web Application.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebApplication'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplication'
          description: ''
    patch:
      operationId: projects_web_applications_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Web Application.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWebApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWebApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWebApplication'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebApplication'
          description: ''
    delete:
      operationId: projects_web_applications_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Web Application.
        required: true
      - in: path
        name: project
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/projects/available-languages/:
    get:
      operationId: projects_available_languages_retrieve
      description: Mixin that adds basic filtering backends
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/report-templates/:
    get:
      operationId: report_templates_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - report-templates
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReportTemplateMinimalList'
          description: ''
    post:
      operationId: report_templates_create
      description: Mixin that adds basic filtering backends
      tags:
      - report-templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTemplateMinimal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportTemplateMinimal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportTemplateMinimal'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplateMinimal'
          description: ''
  /api/report-templates/{id}/:
    get:
      operationId: report_templates_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report template.
        required: true
      tags:
      - report-templates
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplateMinimal'
          description: ''
    put:
      operationId: report_templates_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report template.
        required: true
      tags:
      - report-templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTemplateMinimal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportTemplateMinimal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportTemplateMinimal'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplateMinimal'
          description: ''
    patch:
      operationId: report_templates_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report template.
        required: true
      tags:
      - report-templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReportTemplateMinimal'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReportTemplateMinimal'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReportTemplateMinimal'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplateMinimal'
          description: ''
    delete:
      operationId: report_templates_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this report template.
        required: true
      tags:
      - report-templates
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      description: Mixin that adds basic filtering backends
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBaseUserList'
          description: ''
    post:
      operationId: users_create
      description: Mixin that adds basic filtering backends
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseUser'
          description: ''
    put:
      operationId: users_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAdminUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAdminUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAdminUpdate'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAdminUpdate'
          description: ''
    patch:
      operationId: users_partial_update
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAdminUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAdminUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAdminUpdate'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAdminUpdate'
          description: ''
    delete:
      operationId: users_destroy
      description: Mixin that adds basic filtering backends
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/users/activation/:
    post:
      operationId: users_activation_create
      description: Mixin that adds basic filtering backends
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseUser'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseUser'
          description: ''
  /api/users/reset_password/:
    post:
      operationId: users_reset_password_create
      description: Mixin that adds basic filtering backends
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseUser'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseUser'
          description: ''
  /api/users/reset_password_confirm/:
    post:
      operationId: users_reset_password_confirm_create
      description: Mixin that adds basic filtering backends
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseUser'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseUser'
          description: ''
  /api/users/update_profile/:
    patch:
      operationId: users_update_profile_partial_update
      description: Mixin that adds basic filtering backends
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBaseUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBaseUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBaseUser'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseUser'
          description: ''
  /api/users/user-settings/:
    get:
      operationId: users_user_settings_retrieve
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
          description: ''
    patch:
      operationId: users_user_settings_partial_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserSettings'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
          description: ''
  /api/vulnerability-categories/:
    get:
      operationId: vulnerability_categories_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - vulnerability-categories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVulnerabilityCategoryList'
          description: ''
  /api/vulnerability-categories/{id}/:
    get:
      operationId: vulnerability_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Vulnerability Category.
        required: true
      tags:
      - vulnerability-categories
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityCategory'
          description: ''
  /api/vulnerability-templates/:
    get:
      operationId: vulnerability_templates_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - vulnerability-templates
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVulnerabilityTemplateList'
          description: ''
  /api/vulnerability-templates/{id}/:
    get:
      operationId: vulnerability_templates_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Vulnerability Template.
        required: true
      tags:
      - vulnerability-templates
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityTemplate'
          description: ''
components:
  schemas:
    AEnum:
      type: string
      enum:
      - L
      - H
    APIToken:
      type: object
      properties:
        pk:
          type: string
          readOnly: true
          title: Prefix
        name:
          type: string
          maxLength: 128
        date_last_used:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        prefix:
          type: string
          readOnly: true
        scope_advisories:
          $ref: '#/components/schemas/ScopeAdvisoriesEnum'
        scope_all_projects:
          $ref: '#/components/schemas/ScopeAllProjectsEnum'
        scope_companies:
          $ref: '#/components/schemas/ScopeCompaniesEnum'
        scope_user:
          $ref: '#/components/schemas/ScopeUserEnum'
        date_expire:
          type: string
          format: date-time
          nullable: true
      required:
      - date_created
      - date_last_used
      - name
      - pk
      - prefix
      - scope_advisories
      - scope_all_projects
      - scope_companies
      - scope_user
    AcEnum:
      type: string
      enum:
      - L
      - H
    AccessibleEnum:
      type: string
      enum:
      - Accessible
      - Not Accessible
      - Unknown
    Account:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        role:
          type: string
          maxLength: 256
        username:
          type: string
          maxLength: 256
        password:
          type: string
          maxLength: 256
        accessible:
          type: boolean
          nullable: true
        compromised:
          type: boolean
        description:
          type: string
          nullable: true
      required:
      - date_created
      - date_updated
      - pk
      - username
    Advisory:
      type: object
      properties:
        pk:
          type: string
          readOnly: true
          title: Advisory id
        user:
          allOf:
          - $ref: '#/components/schemas/MinimalUser'
          readOnly: true
        product:
          type: string
          maxLength: 128
        affected_versions:
          type: string
          maxLength: 128
        fixed_version:
          type: string
          nullable: true
          maxLength: 128
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        vendor_url:
          type: string
          format: uri
          maxLength: 200
        vendor_name:
          type: string
          maxLength: 128
        description:
          type: string
          nullable: true
        internal_name:
          type: string
          maxLength: 64
        recommendation:
          type: string
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        custom_report_title:
          type: string
          nullable: true
          maxLength: 255
        hide_advisory_id_in_report:
          type: boolean
        proof_text:
          type: string
        status:
          $ref: '#/components/schemas/Status2deEnum'
        vulnerability:
          $ref: '#/components/schemas/VulnerabilityTemplate'
        cve_id:
          type: string
          nullable: true
          maxLength: 20
        is_draft:
          type: boolean
        date_disclosure:
          type: string
          format: date
          nullable: true
        date_planned_disclosure:
          type: string
          format: date
      required:
      - affected_versions
      - date_created
      - date_planned_disclosure
      - date_updated
      - pk
      - product
      - severity
      - status
      - user
      - vendor_name
      - vendor_url
      - vulnerability
    AdvisoryAdvisoryManagement:
      type: object
      description: an ``AdvisorySerializer`` which adds more fields used by the AdvisoryManagement
      properties:
        pk:
          type: string
          readOnly: true
          title: Advisory id
        user:
          allOf:
          - $ref: '#/components/schemas/MinimalUser'
          readOnly: true
        product:
          type: string
          maxLength: 128
        affected_versions:
          type: string
          maxLength: 128
        fixed_version:
          type: string
          nullable: true
          maxLength: 128
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        vendor_url:
          type: string
          format: uri
          maxLength: 200
        vendor_name:
          type: string
          maxLength: 128
        description:
          type: string
          nullable: true
        internal_name:
          type: string
          maxLength: 64
        recommendation:
          type: string
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        custom_report_title:
          type: string
          nullable: true
          maxLength: 255
        hide_advisory_id_in_report:
          type: boolean
        proof_text:
          type: string
        status:
          $ref: '#/components/schemas/Status2deEnum'
        vulnerability:
          $ref: '#/components/schemas/VulnerabilityTemplate'
        cve_id:
          type: string
          nullable: true
          maxLength: 20
        is_draft:
          type: boolean
        date_disclosure:
          type: string
          format: date
          nullable: true
        date_planned_disclosure:
          type: string
          format: date
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
          readOnly: true
      required:
      - affected_versions
      - date_created
      - date_planned_disclosure
      - date_updated
      - labels
      - pk
      - product
      - severity
      - status
      - user
      - vendor_name
      - vendor_url
      - vulnerability
    AdvisoryComment:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        comment:
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/MinimalUser'
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - comment
      - date_created
      - date_updated
      - pk
      - user
    AdvisoryCreate:
      type: object
      properties:
        pk:
          type: string
          readOnly: true
          title: Advisory id
        user:
          allOf:
          - $ref: '#/components/schemas/MinimalUser'
          readOnly: true
        product:
          type: string
          maxLength: 128
        affected_versions:
          type: string
          maxLength: 128
        fixed_version:
          type: string
          nullable: true
          maxLength: 128
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        vendor_url:
          type: string
          format: uri
          maxLength: 200
        vendor_name:
          type: string
          maxLength: 128
        description:
          type: string
          nullable: true
        internal_name:
          type: string
          maxLength: 64
        recommendation:
          type: string
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        custom_report_title:
          type: string
          nullable: true
          maxLength: 255
        hide_advisory_id_in_report:
          type: boolean
        proof_text:
          type: string
        vulnerability_id:
          type: string
      required:
      - affected_versions
      - date_created
      - date_updated
      - pk
      - product
      - severity
      - user
      - vendor_name
      - vendor_url
      - vulnerability_id
    AdvisoryMembership:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        role:
          $ref: '#/components/schemas/RoleC89Enum'
        user:
          $ref: '#/components/schemas/BaseUser'
        active_until:
          type: string
          format: date-time
          nullable: true
      required:
      - pk
      - role
      - user
    AdvisoryMembershipCreate:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/RoleC89Enum'
        pk:
          type: integer
          readOnly: true
          title: ID
        active_until:
          type: string
          format: date-time
          nullable: true
        email:
          type: string
          format: email
          writeOnly: true
      required:
      - email
      - pk
      - role
    AdvisoryTimeline:
      type: object
      properties:
        text:
          type: string
          maxLength: 255
        date:
          type: string
          format: date
        pk:
          type: integer
          readOnly: true
          title: ID
      required:
      - date
      - pk
      - text
    AdvisoryUpdate:
      type: object
      properties:
        pk:
          type: string
          readOnly: true
          title: Advisory id
        user:
          allOf:
          - $ref: '#/components/schemas/MinimalUser'
          readOnly: true
        product:
          type: string
          maxLength: 128
        affected_versions:
          type: string
          maxLength: 128
        fixed_version:
          type: string
          nullable: true
          maxLength: 128
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        vendor_url:
          type: string
          format: uri
          maxLength: 200
        vendor_name:
          type: string
          maxLength: 128
        description:
          type: string
          nullable: true
        internal_name:
          type: string
          maxLength: 64
        recommendation:
          type: string
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        custom_report_title:
          type: string
          nullable: true
          maxLength: 255
        hide_advisory_id_in_report:
          type: boolean
        proof_text:
          type: string
        status:
          $ref: '#/components/schemas/Status2deEnum'
        vulnerability:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityTemplate'
          readOnly: true
        cve_id:
          type: string
          nullable: true
          maxLength: 20
        is_draft:
          type: boolean
        date_disclosure:
          type: string
          format: date
          nullable: true
        date_planned_disclosure:
          type: string
          format: date
      required:
      - affected_versions
      - date_created
      - date_planned_disclosure
      - date_updated
      - pk
      - product
      - severity
      - status
      - user
      - vendor_name
      - vendor_url
      - vulnerability
    AssetCategory:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 128
        summary:
          type: string
          nullable: true
          maxLength: 258
        category_id:
          type: string
          maxLength: 128
        items:
          type: array
          items:
            $ref: '#/components/schemas/AssetItem'
          readOnly: true
      required:
      - category_id
      - items
      - name
      - pk
    AssetChecklist:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 128
        checklist_id:
          type: string
          maxLength: 128
        component:
          type: string
      required:
      - checklist_id
      - component
      - name
      - pk
    AssetChecklistCreate:
      type: object
      properties:
        checklist_id:
          type: string
        component:
          type: string
      required:
      - checklist_id
      - component
    AssetItem:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 128
        item_id:
          type: string
          maxLength: 128
        description:
          type: string
        status:
          $ref: '#/components/schemas/Status0c3Enum'
      required:
      - description
      - item_id
      - name
      - pk
      - status
    AvEnum:
      type: string
      enum:
      - N
      - A
      - L
      - P
    AwarenessEnum:
      enum:
      - 0
      - 1
      - 4
      - 6
      - 9
      type: integer
    BaseUser:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: integer
          readOnly: true
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
      required:
      - email
      - groups
      - is_active
      - pk
      - username
    CVSSBaseScore:
      type: object
      description: |-
        Serializer for the BaseCVSS Score model
        finding is scoped to a project to prevent BAC vulns
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        av:
          $ref: '#/components/schemas/AvEnum'
        s:
          $ref: '#/components/schemas/SEnum'
        ui:
          $ref: '#/components/schemas/UiEnum'
        i:
          $ref: '#/components/schemas/PrEnum'
        a:
          $ref: '#/components/schemas/AEnum'
        c:
          $ref: '#/components/schemas/PrEnum'
        pr:
          $ref: '#/components/schemas/PrEnum'
        ac:
          $ref: '#/components/schemas/AcEnum'
        cvss31_vector:
          type: string
          readOnly: true
        cvss31_base_score:
          type: string
          readOnly: true
        cvss31_base_severity:
          type: string
          readOnly: true
      required:
      - a
      - ac
      - av
      - c
      - cvss31_base_score
      - cvss31_base_severity
      - cvss31_vector
      - i
      - pk
      - pr
      - s
      - ui
    CWE:
      type: object
      properties:
        cwe_id:
          type: integer
        name:
          type: string
          maxLength: 512
        description:
          type: string
        pk:
          type: integer
          readOnly: true
          title: ID
      required:
      - cwe_id
      - description
      - name
      - pk
    ChangeHistory:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        change:
          type: string
          maxLength: 128
        user:
          type: string
        date:
          type: string
          format: date
        version:
          type: number
          format: double
      required:
      - change
      - date
      - date_created
      - date_updated
      - pk
      - user
      - version
    Checklist:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 128
        checklist_id:
          type: string
          maxLength: 128
      required:
      - checklist_id
      - name
      - pk
    Company:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 256
        street:
          type: string
          maxLength: 256
        self:
          type: string
          format: uri
          readOnly: true
        zipcode:
          type: string
          maxLength: 256
        city:
          type: string
          maxLength: 256
        country:
          type: string
          maxLength: 256
        report_template:
          type: integer
        logo:
          type: string
          format: uri
          writeOnly: true
          nullable: true
      required:
      - city
      - country
      - date_created
      - date_updated
      - name
      - pk
      - report_template
      - self
      - street
      - zipcode
    CompanyContact:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        first_name:
          type: string
          maxLength: 128
        last_name:
          type: string
          maxLength: 128
        phone:
          type: string
          maxLength: 28
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        role:
          type: string
          maxLength: 128
        pgp_public_key:
          type: string
          nullable: true
      required:
      - first_name
      - last_name
      - phone
      - pk
      - role
    CompanyInformation:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        text:
          type: string
        user:
          type: string
          readOnly: true
      required:
      - date_created
      - date_updated
      - pk
      - text
      - user
    DjangoQTask:
      type: object
      properties:
        stopped:
          type: string
          format: date-time
          readOnly: true
        started:
          type: string
          format: date-time
          readOnly: true
        success:
          type: boolean
          readOnly: true
      required:
      - started
      - stopped
      - success
    EnvironmentEnum:
      type: string
      enum:
      - Unknown
      - Production
      - Testing
      - Development
      - Staging
    FinancialDamageEnum:
      enum:
      - 0
      - 1
      - 3
      - 7
      - 9
      type: integer
    Finding:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        vulnerability:
          allOf:
          - $ref: '#/components/schemas/ProjectVulnerability'
          readOnly: true
        internal_id:
          type: string
          readOnly: true
        user_account:
          type: string
          nullable: true
        recommendation:
          type: string
          nullable: true
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        status:
          $ref: '#/components/schemas/Status2deEnum'
        imported:
          type: boolean
        name:
          type: string
          maxLength: 256
        finding_date:
          type: string
          format: date
          nullable: true
        authenticated_test:
          type: boolean
        needs_review:
          type: boolean
        retest_results:
          type: string
          nullable: true
        date_retest:
          type: string
          format: date
          nullable: true
        exclude_from_report:
          type: boolean
        component:
          type: string
        proof_text:
          type: string
      required:
      - component
      - date_created
      - date_updated
      - internal_id
      - name
      - pk
      - severity
      - status
      - vulnerability
    FindingComment:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/MinimalUser'
          readOnly: true
        comment:
          type: string
      required:
      - comment
      - date_created
      - date_updated
      - pk
      - user
    FindingCreate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        vulnerability:
          allOf:
          - $ref: '#/components/schemas/ProjectVulnerability'
          readOnly: true
        internal_id:
          type: string
          readOnly: true
        user_account:
          type: string
          nullable: true
        recommendation:
          type: string
          nullable: true
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        status:
          $ref: '#/components/schemas/Status2deEnum'
        imported:
          type: boolean
        name:
          type: string
          maxLength: 256
        finding_date:
          type: string
          format: date
          nullable: true
        authenticated_test:
          type: boolean
        needs_review:
          type: boolean
        retest_results:
          type: string
          nullable: true
        date_retest:
          type: string
          format: date
          nullable: true
        exclude_from_report:
          type: boolean
        component:
          type: string
        proof_text:
          type: string
        vulnerability_id:
          type: string
      required:
      - component
      - date_created
      - date_updated
      - internal_id
      - name
      - pk
      - status
      - vulnerability
      - vulnerability_id
    FindingImageAttachment:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
        caption:
          type: string
          nullable: true
          maxLength: 256
      required:
      - date_created
      - date_updated
      - image
      - pk
    FindingTimeline:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/BaseUser'
          readOnly: true
        pk:
          type: integer
          readOnly: true
          title: ID
        text:
          type: string
        title:
          type: string
          maxLength: 128
        date_created:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_created
      - pk
      - text
      - title
      - user
    Group:
      type: object
      properties:
        name:
          type: string
          maxLength: 150
        pk:
          type: integer
          readOnly: true
          title: ID
      required:
      - name
      - pk
    Host:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_updated:
          type: string
          format: date-time
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        accessible:
          $ref: '#/components/schemas/AccessibleEnum'
        description:
          type: string
          nullable: true
        environment:
          $ref: '#/components/schemas/EnvironmentEnum'
        display_name:
          type: string
          readOnly: true
        asset_type:
          type: string
          readOnly: true
        ip:
          type: string
        dns:
          type: string
          nullable: true
          maxLength: 255
        name:
          type: string
          readOnly: true
        operating_system:
          type: string
          nullable: true
          maxLength: 255
      required:
      - asset_type
      - date_created
      - date_updated
      - display_name
      - ip
      - name
      - pk
    ImageAttachment:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
        caption:
          type: string
          nullable: true
          maxLength: 256
      required:
      - date_created
      - date_updated
      - image
      - pk
    IntrusionDetectionEnum:
      enum:
      - 0
      - 1
      - 3
      - 8
      - 9
      type: integer
    Label:
      type: object
      properties:
        name:
          type: string
          maxLength: 128
        description:
          type: string
          nullable: true
        color:
          type: string
          pattern: '#([a-fA-F\d]{6}|[a-fA-F\d]{3})'
          maxLength: 7
        pk:
          type: integer
          readOnly: true
          title: ID
        color_rgb:
          type: string
          readOnly: true
      required:
      - color
      - color_rgb
      - name
      - pk
    LanguageEnum:
      type: string
      enum:
      - English
      - German
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    LoginResponse:
      type: object
      properties:
        user:
          allOf:
          - $ref: '#/components/schemas/UserMe'
          readOnly: true
        csrf_token:
          type: string
      required:
      - csrf_token
      - user
    LossOfAccountabilityEnum:
      enum:
      - 0
      - 1
      - 7
      - 9
      type: integer
    LossOfAvailabilityEnum:
      enum:
      - 0
      - 1
      - 5
      - 7
      - 9
      type: integer
    LossOfConfidentialityEnum:
      enum:
      - 0
      - 2
      - 6
      - 7
      - 9
      type: integer
    LossOfIntegrityEnum:
      enum:
      - 0
      - 1
      - 3
      - 5
      - 7
      - 9
      type: integer
    Membership:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/RoleEcaEnum'
        user:
          $ref: '#/components/schemas/MinimalUser'
        pk:
          type: integer
          readOnly: true
          title: ID
        active_until:
          type: string
          format: date-time
          nullable: true
      required:
      - pk
      - role
      - user
    MembershipCreateUpdate:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/RoleEcaEnum'
        user:
          type: integer
        pk:
          type: integer
          readOnly: true
          title: ID
        active_until:
          type: string
          format: date-time
          nullable: true
      required:
      - pk
      - role
      - user
    MinimalUser:
      type: object
      properties:
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        pk:
          type: integer
          readOnly: true
          title: ID
      required:
      - pk
      - username
    MobileApplication:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_updated:
          type: string
          format: date-time
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        accessible:
          $ref: '#/components/schemas/AccessibleEnum'
        description:
          type: string
          nullable: true
        environment:
          $ref: '#/components/schemas/EnvironmentEnum'
        display_name:
          type: string
          readOnly: true
        asset_type:
          type: string
          readOnly: true
        os:
          $ref: '#/components/schemas/OsEnum'
        name:
          type: string
          maxLength: 256
        certificate_pinning:
          type: boolean
          nullable: true
        version:
          type: string
          maxLength: 128
      required:
      - asset_type
      - date_created
      - date_updated
      - display_name
      - name
      - os
      - pk
    MotiveEnum:
      enum:
      - 0
      - 1
      - 4
      - 9
      type: integer
    NonComplianceEnum:
      enum:
      - 0
      - 2
      - 5
      - 7
      type: integer
    OWASPRiskRating:
      type: object
      description: we do not use valuedchoicefields here
      properties:
        skill_level:
          $ref: '#/components/schemas/SkillLevelEnum'
        motive:
          $ref: '#/components/schemas/MotiveEnum'
        opportunity:
          $ref: '#/components/schemas/OpportunityEnum'
        size:
          $ref: '#/components/schemas/SizeEnum'
        ease_of_discovery:
          $ref: '#/components/schemas/FinancialDamageEnum'
        ease_of_exploit:
          $ref: '#/components/schemas/FinancialDamageEnum'
        awareness:
          $ref: '#/components/schemas/AwarenessEnum'
        intrusion_detection:
          $ref: '#/components/schemas/IntrusionDetectionEnum'
        loss_of_availability:
          $ref: '#/components/schemas/LossOfAvailabilityEnum'
        loss_of_confidentiality:
          $ref: '#/components/schemas/LossOfConfidentialityEnum'
        loss_of_accountability:
          $ref: '#/components/schemas/LossOfAccountabilityEnum'
        loss_of_integrity:
          $ref: '#/components/schemas/LossOfIntegrityEnum'
        financial_damage:
          $ref: '#/components/schemas/FinancialDamageEnum'
        reputation_damage:
          $ref: '#/components/schemas/ReputationDamageEnum'
        non_compliance:
          $ref: '#/components/schemas/NonComplianceEnum'
        privacy_violation:
          $ref: '#/components/schemas/PrivacyViolationEnum'
        pk:
          type: integer
          readOnly: true
          title: ID
        overall_risk_severity:
          type: string
          readOnly: true
        likelihood_factors:
          type: string
          readOnly: true
        impact_factors:
          type: string
          readOnly: true
      required:
      - impact_factors
      - likelihood_factors
      - overall_risk_severity
      - pk
    OpportunityEnum:
      enum:
      - 0
      - 4
      - 7
      - 9
      type: integer
    OsEnum:
      type: string
      enum:
      - Unknown
      - Android
      - iOS
    PaginatedAPITokenList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/APIToken'
    PaginatedAccountList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Account'
    PaginatedAdvisoryAdvisoryManagementList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdvisoryAdvisoryManagement'
    PaginatedAdvisoryCommentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdvisoryComment'
    PaginatedAdvisoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Advisory'
    PaginatedAdvisoryMembershipList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdvisoryMembership'
    PaginatedAdvisoryTimelineList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdvisoryTimeline'
    PaginatedAssetCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssetCategory'
    PaginatedAssetChecklistList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssetChecklist'
    PaginatedAssetItemList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AssetItem'
    PaginatedBaseUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BaseUser'
    PaginatedCVSSBaseScoreList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CVSSBaseScore'
    PaginatedCWEList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CWE'
    PaginatedChangeHistoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChangeHistory'
    PaginatedChecklistList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Checklist'
    PaginatedCompanyContactList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompanyContact'
    PaginatedCompanyInformationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CompanyInformation'
    PaginatedCompanyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Company'
    PaginatedFindingCommentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FindingComment'
    PaginatedFindingImageAttachmentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FindingImageAttachment'
    PaginatedFindingList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Finding'
    PaginatedFindingTimelineList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FindingTimeline'
    PaginatedGroupList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    PaginatedHostList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Host'
    PaginatedImageAttachmentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ImageAttachment'
    PaginatedLabelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    PaginatedMembershipList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
    PaginatedMobileApplicationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MobileApplication'
    PaginatedOWASPRiskRatingList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OWASPRiskRating'
    PaginatedPentestTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PentestType'
    PaginatedProjectCommandList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectCommand'
    PaginatedProjectContactList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectContact'
    PaginatedProjectFileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectFile'
    PaginatedProjectList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    PaginatedProjectScopeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectScope'
    PaginatedProjectVulnerabilityList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectVulnerability'
    PaginatedReportList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Report'
    PaginatedReportReleaseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReportRelease'
    PaginatedReportTemplateMinimalList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReportTemplateMinimal'
    PaginatedServiceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Service'
    PaginatedVulnerabilityCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/VulnerabilityCategory'
    PaginatedVulnerabilityTemplateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/VulnerabilityTemplate'
    PaginatedWebApplicationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/WebApplication'
    PatchedAccount:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        role:
          type: string
          maxLength: 256
        username:
          type: string
          maxLength: 256
        password:
          type: string
          maxLength: 256
        accessible:
          type: boolean
          nullable: true
        compromised:
          type: boolean
        description:
          type: string
          nullable: true
    PatchedAdvisoryComment:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        comment:
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/MinimalUser'
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
    PatchedAdvisoryTimeline:
      type: object
      properties:
        text:
          type: string
          maxLength: 255
        date:
          type: string
          format: date
        pk:
          type: integer
          readOnly: true
          title: ID
    PatchedAdvisoryUpdate:
      type: object
      properties:
        pk:
          type: string
          readOnly: true
          title: Advisory id
        user:
          allOf:
          - $ref: '#/components/schemas/MinimalUser'
          readOnly: true
        product:
          type: string
          maxLength: 128
        affected_versions:
          type: string
          maxLength: 128
        fixed_version:
          type: string
          nullable: true
          maxLength: 128
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        vendor_url:
          type: string
          format: uri
          maxLength: 200
        vendor_name:
          type: string
          maxLength: 128
        description:
          type: string
          nullable: true
        internal_name:
          type: string
          maxLength: 64
        recommendation:
          type: string
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        custom_report_title:
          type: string
          nullable: true
          maxLength: 255
        hide_advisory_id_in_report:
          type: boolean
        proof_text:
          type: string
        status:
          $ref: '#/components/schemas/Status2deEnum'
        vulnerability:
          allOf:
          - $ref: '#/components/schemas/VulnerabilityTemplate'
          readOnly: true
        cve_id:
          type: string
          nullable: true
          maxLength: 20
        is_draft:
          type: boolean
        date_disclosure:
          type: string
          format: date
          nullable: true
        date_planned_disclosure:
          type: string
          format: date
    PatchedAssetItem:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 128
        item_id:
          type: string
          maxLength: 128
        description:
          type: string
        status:
          $ref: '#/components/schemas/Status0c3Enum'
    PatchedBaseUser:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          readOnly: true
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: integer
          readOnly: true
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
    PatchedCVSSBaseScore:
      type: object
      description: |-
        Serializer for the BaseCVSS Score model
        finding is scoped to a project to prevent BAC vulns
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        av:
          $ref: '#/components/schemas/AvEnum'
        s:
          $ref: '#/components/schemas/SEnum'
        ui:
          $ref: '#/components/schemas/UiEnum'
        i:
          $ref: '#/components/schemas/PrEnum'
        a:
          $ref: '#/components/schemas/AEnum'
        c:
          $ref: '#/components/schemas/PrEnum'
        pr:
          $ref: '#/components/schemas/PrEnum'
        ac:
          $ref: '#/components/schemas/AcEnum'
        cvss31_vector:
          type: string
          readOnly: true
        cvss31_base_score:
          type: string
          readOnly: true
        cvss31_base_severity:
          type: string
          readOnly: true
    PatchedChangeHistory:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        change:
          type: string
          maxLength: 128
        user:
          type: string
        date:
          type: string
          format: date
        version:
          type: number
          format: double
    PatchedCompany:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 256
        street:
          type: string
          maxLength: 256
        self:
          type: string
          format: uri
          readOnly: true
        zipcode:
          type: string
          maxLength: 256
        city:
          type: string
          maxLength: 256
        country:
          type: string
          maxLength: 256
        report_template:
          type: integer
        logo:
          type: string
          format: uri
          writeOnly: true
          nullable: true
    PatchedCompanyContact:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        first_name:
          type: string
          maxLength: 128
        last_name:
          type: string
          maxLength: 128
        phone:
          type: string
          maxLength: 28
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        role:
          type: string
          maxLength: 128
        pgp_public_key:
          type: string
          nullable: true
    PatchedCompanyInformation:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        text:
          type: string
        user:
          type: string
          readOnly: true
    PatchedFinding:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        vulnerability:
          allOf:
          - $ref: '#/components/schemas/ProjectVulnerability'
          readOnly: true
        internal_id:
          type: string
          readOnly: true
        user_account:
          type: string
          nullable: true
        recommendation:
          type: string
          nullable: true
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        status:
          $ref: '#/components/schemas/Status2deEnum'
        imported:
          type: boolean
        name:
          type: string
          maxLength: 256
        finding_date:
          type: string
          format: date
          nullable: true
        authenticated_test:
          type: boolean
        needs_review:
          type: boolean
        retest_results:
          type: string
          nullable: true
        date_retest:
          type: string
          format: date
          nullable: true
        exclude_from_report:
          type: boolean
        component:
          type: string
        proof_text:
          type: string
    PatchedFindingComment:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/MinimalUser'
          readOnly: true
        comment:
          type: string
    PatchedFindingImageAttachment:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
        caption:
          type: string
          nullable: true
          maxLength: 256
    PatchedHost:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_updated:
          type: string
          format: date-time
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        accessible:
          $ref: '#/components/schemas/AccessibleEnum'
        description:
          type: string
          nullable: true
        environment:
          $ref: '#/components/schemas/EnvironmentEnum'
        display_name:
          type: string
          readOnly: true
        asset_type:
          type: string
          readOnly: true
        ip:
          type: string
        dns:
          type: string
          nullable: true
          maxLength: 255
        name:
          type: string
          readOnly: true
        operating_system:
          type: string
          nullable: true
          maxLength: 255
    PatchedImageAttachment:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        image:
          type: string
          format: uri
        caption:
          type: string
          nullable: true
          maxLength: 256
    PatchedLabel:
      type: object
      properties:
        name:
          type: string
          maxLength: 128
        description:
          type: string
          nullable: true
        color:
          type: string
          pattern: '#([a-fA-F\d]{6}|[a-fA-F\d]{3})'
          maxLength: 7
        pk:
          type: integer
          readOnly: true
          title: ID
        color_rgb:
          type: string
          readOnly: true
    PatchedMembershipCreateUpdate:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/RoleEcaEnum'
        user:
          type: integer
        pk:
          type: integer
          readOnly: true
          title: ID
        active_until:
          type: string
          format: date-time
          nullable: true
    PatchedMobileApplication:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_updated:
          type: string
          format: date-time
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        accessible:
          $ref: '#/components/schemas/AccessibleEnum'
        description:
          type: string
          nullable: true
        environment:
          $ref: '#/components/schemas/EnvironmentEnum'
        display_name:
          type: string
          readOnly: true
        asset_type:
          type: string
          readOnly: true
        os:
          $ref: '#/components/schemas/OsEnum'
        name:
          type: string
          maxLength: 256
        certificate_pinning:
          type: boolean
          nullable: true
        version:
          type: string
          maxLength: 128
    PatchedOWASPRiskRating:
      type: object
      description: we do not use valuedchoicefields here
      properties:
        skill_level:
          $ref: '#/components/schemas/SkillLevelEnum'
        motive:
          $ref: '#/components/schemas/MotiveEnum'
        opportunity:
          $ref: '#/components/schemas/OpportunityEnum'
        size:
          $ref: '#/components/schemas/SizeEnum'
        ease_of_discovery:
          $ref: '#/components/schemas/FinancialDamageEnum'
        ease_of_exploit:
          $ref: '#/components/schemas/FinancialDamageEnum'
        awareness:
          $ref: '#/components/schemas/AwarenessEnum'
        intrusion_detection:
          $ref: '#/components/schemas/IntrusionDetectionEnum'
        loss_of_availability:
          $ref: '#/components/schemas/LossOfAvailabilityEnum'
        loss_of_confidentiality:
          $ref: '#/components/schemas/LossOfConfidentialityEnum'
        loss_of_accountability:
          $ref: '#/components/schemas/LossOfAccountabilityEnum'
        loss_of_integrity:
          $ref: '#/components/schemas/LossOfIntegrityEnum'
        financial_damage:
          $ref: '#/components/schemas/FinancialDamageEnum'
        reputation_damage:
          $ref: '#/components/schemas/ReputationDamageEnum'
        non_compliance:
          $ref: '#/components/schemas/NonComplianceEnum'
        privacy_violation:
          $ref: '#/components/schemas/PrivacyViolationEnum'
        pk:
          type: integer
          readOnly: true
          title: ID
        overall_risk_severity:
          type: string
          readOnly: true
        likelihood_factors:
          type: string
          readOnly: true
        impact_factors:
          type: string
          readOnly: true
    PatchedPentestType:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 64
        description:
          type: string
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
    PatchedProject:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 254
        status:
          $ref: '#/components/schemas/Status0c3Enum'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        company:
          type: integer
        test_method:
          $ref: '#/components/schemas/TestMethodEnum'
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        description:
          type: string
          nullable: true
        company_name:
          type: string
          readOnly: true
        pinned:
          type: string
          readOnly: true
        year:
          type: integer
          readOnly: true
          nullable: true
        pentest_types:
          type: array
          items:
            type: string
        require_cvss_base_score:
          type: boolean
        require_owasp_risk_rating:
          type: boolean
        language:
          $ref: '#/components/schemas/LanguageEnum'
    PatchedProjectCommand:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        command:
          type: string
          maxLength: 512
        output:
          type: string
        date_run:
          type: string
          format: date-time
        user:
          allOf:
          - $ref: '#/components/schemas/MinimalUser'
          readOnly: true
    PatchedProjectContact:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        contact:
          type: string
    PatchedProjectFile:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 128
        file:
          type: string
          format: uri
    PatchedProjectScope:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        permission:
          $ref: '#/components/schemas/PermissionEnum'
        details:
          type: string
          maxLength: 256
    PatchedProjectVulnerability:
      type: object
      properties:
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        category:
          type: string
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 128
        description:
          type: string
        vulnerability_id:
          type: string
          maxLength: 254
        recommendation:
          type: string
        cwe:
          type: string
        remediation:
          type: string
          maxLength: 1024
    PatchedReport:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 128
        title:
          type: string
          maxLength: 128
        template:
          type: string
        author:
          type: string
        variant:
          $ref: '#/components/schemas/VariantEnum'
        recommendation:
          type: string
          nullable: true
        evaluation:
          type: string
          nullable: true
    PatchedReportTemplateMinimal:
      type: object
      description: a report template serializer that does not expose path information
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        status:
          $ref: '#/components/schemas/ReportTemplateMinimalStatusEnum'
        name:
          type: string
          maxLength: 64
    PatchedService:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        host:
          type: string
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 256
        protocol:
          $ref: '#/components/schemas/ProtocolEnum'
        port:
          type: integer
          maximum: 65535
          nullable: true
        product:
          type: string
          nullable: true
          maxLength: 255
        state:
          allOf:
          - $ref: '#/components/schemas/StateEnum'
          nullable: true
        display_name:
          type: string
          readOnly: true
    PatchedUserAdminUpdate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
    PatchedUserSettings:
      type: object
      properties:
        show_real_name_in_report:
          type: boolean
        notify_before_disclosure_mail:
          type: boolean
        notify_critical_findings:
          type: boolean
    PatchedWebApplication:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_updated:
          type: string
          format: date-time
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        accessible:
          $ref: '#/components/schemas/AccessibleEnum'
        description:
          type: string
          nullable: true
        environment:
          $ref: '#/components/schemas/EnvironmentEnum'
        display_name:
          type: string
          readOnly: true
        asset_type:
          type: string
          readOnly: true
        base_url:
          type: string
          format: uri
          maxLength: 200
        version:
          type: string
          nullable: true
          maxLength: 128
        name:
          type: string
          maxLength: 256
    PentestType:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 64
        description:
          type: string
          nullable: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_created
      - date_updated
      - name
      - pk
    PermissionEnum:
      type: string
      enum:
      - Denied
      - Allowed
    PinnedProject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_created
      - date_updated
      - id
    PrEnum:
      type: string
      enum:
      - N
      - L
      - H
    PrivacyViolationEnum:
      enum:
      - 0
      - 3
      - 5
      - 7
      - 9
      type: integer
    Project:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 254
        status:
          $ref: '#/components/schemas/Status0c3Enum'
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        company:
          type: integer
        test_method:
          $ref: '#/components/schemas/TestMethodEnum'
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        description:
          type: string
          nullable: true
        company_name:
          type: string
          readOnly: true
        pinned:
          type: string
          readOnly: true
        year:
          type: integer
          readOnly: true
          nullable: true
        pentest_types:
          type: array
          items:
            type: string
        require_cvss_base_score:
          type: boolean
        require_owasp_risk_rating:
          type: boolean
        language:
          $ref: '#/components/schemas/LanguageEnum'
      required:
      - company
      - company_name
      - date_created
      - date_updated
      - end_date
      - language
      - name
      - pentest_types
      - pinned
      - pk
      - start_date
      - status
      - test_method
      - year
    ProjectCommand:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        command:
          type: string
          maxLength: 512
        output:
          type: string
        date_run:
          type: string
          format: date-time
        user:
          allOf:
          - $ref: '#/components/schemas/MinimalUser'
          readOnly: true
      required:
      - command
      - output
      - pk
      - user
    ProjectContact:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        contact:
          type: string
      required:
      - contact
      - date_created
      - date_updated
      - pk
    ProjectFile:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 128
        file:
          type: string
          format: uri
      required:
      - date_created
      - date_updated
      - file
      - name
      - pk
    ProjectScope:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        permission:
          $ref: '#/components/schemas/PermissionEnum'
        details:
          type: string
          maxLength: 256
      required:
      - details
      - permission
      - pk
    ProjectVulnerability:
      type: object
      properties:
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        category:
          type: string
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 128
        description:
          type: string
        vulnerability_id:
          type: string
          maxLength: 254
        recommendation:
          type: string
        cwe:
          type: string
        remediation:
          type: string
          maxLength: 1024
      required:
      - category
      - cwe
      - description
      - name
      - pk
      - recommendation
      - severity
      - vulnerability_id
    ProtocolEnum:
      type: string
      enum:
      - TCP
      - UDP
    ReleaseTypeEnum:
      type: string
      enum:
      - Draft
      - Final
      - Preview
    Report:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 128
        title:
          type: string
          maxLength: 128
        template:
          type: string
        author:
          type: string
        variant:
          $ref: '#/components/schemas/VariantEnum'
        recommendation:
          type: string
          nullable: true
        evaluation:
          type: string
          nullable: true
      required:
      - author
      - date_created
      - date_updated
      - name
      - pk
      - template
      - variant
    ReportRelease:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 128
        release_type:
          $ref: '#/components/schemas/ReleaseTypeEnum'
        task:
          allOf:
          - $ref: '#/components/schemas/DjangoQTask'
          readOnly: true
        task_id:
          type: string
          readOnly: true
          nullable: true
      required:
      - date_created
      - date_updated
      - name
      - pk
      - release_type
      - task
      - task_id
    ReportTemplateMinimal:
      type: object
      description: a report template serializer that does not expose path information
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        status:
          $ref: '#/components/schemas/ReportTemplateMinimalStatusEnum'
        name:
          type: string
          maxLength: 64
      required:
      - name
      - pk
      - status
    ReportTemplateMinimalStatusEnum:
      type: string
      enum:
      - Active
      - Draft
      - Deactivated
    ReputationDamageEnum:
      enum:
      - 0
      - 1
      - 4
      - 5
      - 9
      type: integer
    RoleC89Enum:
      type: string
      enum:
      - Creator
      - Read Only
      - Vendor
    RoleEcaEnum:
      type: string
      enum:
      - Project Leader
      - Contributor
      - Read Only
      - Customer
      - Owner
    SEnum:
      type: string
      enum:
      - U
      - C
    ScopeAdvisoriesEnum:
      type: string
      enum:
      - No Access
      - Read
      - Read Write
    ScopeAllProjectsEnum:
      type: string
      enum:
      - No Access
      - Read
      - Read Write
    ScopeCompaniesEnum:
      type: string
      enum:
      - No Access
      - Read
      - Read Write
    ScopeUserEnum:
      type: string
      enum:
      - No Access
      - Read
      - Read Write
    Service:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        host:
          type: string
        date_created:
          type: string
          format: date-time
          readOnly: true
        date_updated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 256
        protocol:
          $ref: '#/components/schemas/ProtocolEnum'
        port:
          type: integer
          maximum: 65535
          nullable: true
        product:
          type: string
          nullable: true
          maxLength: 255
        state:
          allOf:
          - $ref: '#/components/schemas/StateEnum'
          nullable: true
        display_name:
          type: string
          readOnly: true
      required:
      - date_created
      - date_updated
      - display_name
      - host
      - pk
      - port
      - protocol
    SeverityEnum:
      type: string
      enum:
      - Informational
      - Low
      - Medium
      - High
      - Critical
    SizeEnum:
      enum:
      - 0
      - 2
      - 4
      - 5
      - 6
      - 9
      type: integer
    SkillLevelEnum:
      enum:
      - 0
      - 1
      - 3
      - 5
      - 6
      - 9
      type: integer
    StateEnum:
      type: string
      enum:
      - Open
      - Closed
      - Filtered
    Status0c3Enum:
      type: string
      enum:
      - Open
      - Closed
    Status2deEnum:
      type: string
      enum:
      - Open
      - Fixed
      - Wont Fix
    TestMethodEnum:
      type: string
      enum:
      - White Box
      - Grey Box
      - Black Box
      - Unknown
    UiEnum:
      type: string
      enum:
      - N
      - R
    UserAdminUpdate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
      required:
      - email
      - pk
      - username
    UserCreate:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
      required:
      - email
      - pk
      - username
    UserMe:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          readOnly: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
      required:
      - email
      - groups
      - pk
      - username
    UserSettings:
      type: object
      properties:
        show_real_name_in_report:
          type: boolean
        notify_before_disclosure_mail:
          type: boolean
        notify_critical_findings:
          type: boolean
    VariantEnum:
      type: string
      enum:
      - Pentest PDF
      - Vulnerability CSV
    VulnerabilityCategory:
      type: object
      properties:
        category_id:
          type: string
          maxLength: 128
        name:
          type: string
          maxLength: 255
        pk:
          type: integer
          readOnly: true
          title: ID
      required:
      - category_id
      - name
      - pk
    VulnerabilityTemplate:
      type: object
      properties:
        severity:
          $ref: '#/components/schemas/SeverityEnum'
        category:
          type: string
        pk:
          type: integer
          readOnly: true
          title: ID
        name:
          type: string
          maxLength: 128
        description:
          type: string
        vulnerability_id:
          type: string
          maxLength: 254
        recommendation:
          type: string
        cwe:
          type: string
        remediation:
          type: string
          maxLength: 1024
      required:
      - category
      - cwe
      - description
      - name
      - pk
      - recommendation
      - severity
      - vulnerability_id
    WebApplication:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        date_updated:
          type: string
          format: date-time
          readOnly: true
        date_created:
          type: string
          format: date-time
          readOnly: true
        accessible:
          $ref: '#/components/schemas/AccessibleEnum'
        description:
          type: string
          nullable: true
        environment:
          $ref: '#/components/schemas/EnvironmentEnum'
        display_name:
          type: string
          readOnly: true
        asset_type:
          type: string
          readOnly: true
        base_url:
          type: string
          format: uri
          maxLength: 200
        version:
          type: string
          nullable: true
          maxLength: 128
        name:
          type: string
          maxLength: 256
      required:
      - asset_type
      - base_url
      - date_created
      - date_updated
      - display_name
      - name
      - pk
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: http
      scheme: bearer
